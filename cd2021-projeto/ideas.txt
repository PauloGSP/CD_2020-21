== TO-DO / IDEIAS ==

podemos fazer um broker que comunica com todos os slaves e envia/recebe mensagens // n pode haver broker
os slaves não contatam entre si, antes falam com o broker que trata de tudo
o broker vai ter um host e uma port e eles fazem connect a essa porta
o broker vai ter o algoritmo para a geração de palavras passes de forma eficiente

o trabalho vai ser dividido por 3 slaves
Os caracteres possíveis:
'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
O slave 1 pode ficar com todas as passwords que comecem por a-z (por exemplo)
o slave 2 de A-Z (por exemplo)
o slave 3 de 0-9 (por exemplo)
isto idealmente estaria um numero distribuido entre os slaves
cada um deles gera uma password e envia

o tempo é diferente entre o server e o slave (uma hora)

temos que ter cuidado porque um slave pode estar banido e tentar uma password que esteja correta (mas n passa)
e depois a password "desaparece" porque o slave excluiu a mesma

dar os slaves a conhecer
guardar o ip do slave como key de 2 dics -
1 dic para as passwords tentadas para ele n tentar smp a msm
1 dic para guardar o numero de attempts 

=========================================

28 junho:

exemplo:
3 slaves: 
slave 1 fica com passwords que comecem em a-t / slave 2 fica com passwords de u-N / slave 3 fica de O-9

os slaves conetam-se através do multicast group (socket multicast udp)
quando um slave é inicializado, este envia mensagem a todos os outros com o seu ip
isto vai acontecer frequentemente para saber quem está alive e quem não está
se ainda n tinha esse slave, criamos uma nova socket conetada ao ip do outro slave e adicionamos a um dic
caso um slave existente não esteja alive, este é retirado
sempre que entra ou sai alguem do grupo, todos são notificados e reestruturam o algotitmo de password breaking
os slaves que se conhecem falam através de sockets unicast
